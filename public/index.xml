<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Collecte et interprétation de données</title>
    <link>http://localhost:1313/420-514/index.html</link>
    <description></description>
    <generator>Hugo</generator>
    <language>fr-ca</language>
    <lastBuildDate>Thu, 21 Aug 2025 11:41:38 -0400</lastBuildDate>
    <atom:link href="http://localhost:1313/420-514/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Préalables</title>
      <link>http://localhost:1313/420-514/intro/index.html</link>
      <pubDate>Thu, 21 Aug 2025 11:41:38 -0400</pubDate>
      <guid>http://localhost:1313/420-514/intro/index.html</guid>
      <description>Dans ce module nous ferons une courte révision des notions essentielles au cours.</description>
    </item>
    <item>
      <title>Cadriciel (framework) côté serveur : Node.js / express</title>
      <link>http://localhost:1313/420-514/nodejsframeworkexpress/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/420-514/nodejsframeworkexpress/index.html</guid>
      <description>Dans ce module, on va développer une API ou une application serveur complète avec un cadriciel moderne.</description>
    </item>
    <item>
      <title>Requêtes HTTP et format de données</title>
      <link>http://localhost:1313/420-514/httprequestdataformat/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/420-514/httprequestdataformat/index.html</guid>
      <description>Dans ce chapitre, nous allons découvrir le fonctionnement des requêtes HTTP et leur rôle dans l’échange de données sur le Web. Nous verrons comment un client, tel qu’un navigateur, envoie une requête au serveur pour accéder à une ressource, et comment le serveur répond avec un code de statut, des en-têtes et éventuellement un contenu. Nous présenterons les différentes méthodes HTTP (GET, POST, etc.), la structure d’une requête et d’une réponse, ainsi que des exemples concrets d’échanges entre client et serveur.</description>
    </item>
  </channel>
</rss>